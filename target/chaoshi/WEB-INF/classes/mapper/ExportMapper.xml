<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="market.dao.ExportMapper">
  <resultMap id="BaseResultMap" type="market.domain.Export">
    <id column="inid" jdbcType="VARCHAR" property="inid" />
    <result column="proid" jdbcType="VARCHAR" property="proid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="indate" jdbcType="DATE" property="indate" />
    <result column="retdate" jdbcType="DATE" property="retdate" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="marks" jdbcType="VARCHAR" property="marks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    inid, proid, pname, num, indate, retdate, reason, marks
  </sql>
  <select id="selectByExample" parameterType="market.domain.ExportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from export
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
   *
    from export
    where inid = #{inid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from export
    where inid = #{inid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="market.domain.Export">
    insert into export (inid, proid, pname,
      num, indate, retdate, reason, 
      marks)
    values (#{inid,jdbcType=VARCHAR}, #{proid,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{indate,jdbcType=DATE}, #{retdate,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, 
      #{marks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="market.domain.Export">
    insert into export
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inid != null">
        inid,
      </if>
      <if test="proid != null">
        proid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="indate != null">
        indate,
      </if>
      <if test="retdate != null">
        retdate,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="marks != null">
        marks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inid != null">
        #{inid,jdbcType=VARCHAR},
      </if>
      <if test="proid != null">
        #{proid,jdbcType=VARCHAR},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="indate != null">
        #{indate,jdbcType=DATE},
      </if>
      <if test="retdate != null">
        #{retdate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="marks != null">
        #{marks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="market.domain.Export">
    update export
    <set>
      <if test="proid != null">
        proid = #{proid,jdbcType=VARCHAR},
      </if>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="indate != null">
        indate = #{indate,jdbcType=DATE},
      </if>
      <if test="retdate != null">
        retdate = #{retdate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="marks != null">
        marks = #{marks,jdbcType=VARCHAR},
      </if>
    </set>
    where inid = #{inid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="market.domain.Export">
    update export
    set proid = #{proid,jdbcType=VARCHAR},
      pname = #{pname,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      indate = #{indate,jdbcType=DATE},
      retdate = #{retdate,jdbcType=DATE},
      reason = #{reason,jdbcType=VARCHAR},
      marks = #{marks,jdbcType=VARCHAR}
    where inid = #{inid,jdbcType=VARCHAR}
  </update>
    <select id="getbyparams" resultMap="BaseResultMap">
 	 select * from export
  	<where>
		<if test="proid!=null and proid!=''">
		and	proid = #{proid,jdbcType=VARCHAR}
		</if>		 	
		<if test="retdate!=null and retdate!=''">
			and retdate=#{retdate}
		</if>
		<if test="pname!=null and pname!=''">
			and pname like concat('%',#{pname},'%')
		</if>	
		<if test="inid!=null and inid!=''">
			and inid=#{inid}
		</if>
		</where>	
  </select>
</mapper>